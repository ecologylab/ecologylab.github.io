var collectionName;function setCollection(whichButton){   collectionName	= whichButton.value;}function setCollectionByDiv(thatDiv){   var thatRadio	= thatDiv.getElementsByTagName("input")[0];//   alert("setCollectionName("+thatDiv+" "+thatRadio.value);   collectionName	= thatRadio.value;   thatRadio.checked	= true;   //alert(thatRadio.value +" "+thatRadio.checked);   reCollection();}function reCollection(){   //alert("reCollection(): " +collectionName);   //alert("originating document: " + window.document.location.href);   //namedCollage(collectionName, 0, 0, "000000");   //document.getElementById('appletsFrame').   //alert("frame: " + top.frames['applets'].document);   //alert("iframe: " + document.getElementById('appletsFrame').contentWindow.name);   namedCollage(collectionName);}function launchCollection(collectionSelect){   //alert('launchCollection');   var whichCollage =       collectionSelect.options[collectionSelect.selectedIndex].value;   namedCollage(whichCollage, 0, document.getElementById('appletsFrame').contentWindow, "000000");   //namedCollage(whichCollage, 0, 0, "000000");}var launchWindow;var NEED_POPUPS = "You need to allow popups for our site\nto use combinFormation.";function focusOrNeedPopups(win, url){   if (!win)      alert(NEED_POPUPS);   else   {      if (url)	 win.location	= url;      win.focus();   }}function launchPopup(url){   launchWindow = window.open(url, "cmlaunch", 'width=680, height=600, scrollbars,status, resizable');   focusOrNeedPopups(launchWindow);}var popupArgs	= 'resizable=yes,scrollbars=yes,location=yes';var ourWindow;function supplementalPopup(href){  ourWindow = popup10(href, 'javadownload', 800, 600, popupArgs, true);}function paperPopup(paper){   ourWindow = supplementalPopup("../research/publications/"+paper);}function relativeAddr(url){   var referrer		= location.href;   if ((url.indexOf("http://") != 0) &&       (url.indexOf("/") != 0))      url =  referrer.substring(0, referrer.lastIndexOf("/"))+"/" + url;   return url;}function regeneratePopup(infospace, title){   infospace = relativeAddr(infospace);   var url = '/combinFormation/launch/regenerate.html?infospace='+	infospace;   if (title)	url += '&title=' + title;//   alert(url);   mywindow = window.open(url, "cmlaunch", "width=500, height=600, scrollbars,status, resizable, top="+(screen.height-670)+", left="+(screen.width-570));    focusOrNeedPopups(mywindow);}function support(hash){   hash		= hash ? hash : "";   supportWindow = opener ? opener : this;   var dir = machineDir(supportWindow.location.pathname);   var location = rootDir + dir + "/support.html" + hash;   focusOrNeedPopups(supportWindow, location);}function machineDir(loc){   var slash = loc.indexOf("/");   if (slash == 0)      return machineDir(loc.substring(1));   var lastSlash = loc.lastIndexOf("/");   var result = loc.substring(0, slash);   if (result.indexOf("achine")!= -1)      return result;   else      return machineDir(loc.substring(slash+1))}function supportPopup(url){   supportWindow = window.open(url, "cmsupport", "width=600, height="+			       (screen.height - 100) + ", scrollbars");   focusOrNeedPopups(supportWindow);}var navPreloads = ['images/buttons/aboutButton_anim.gif', 'images/launchAnim.gif', 'images/buttons/supportButton_anim.gif', 'images/buttons/prefButton_anim.gif', 'images/animatedCredits3.gif'];function preloadNav(){   preload(navPreloads);}function MM_swapImgRestore() { //v3.0  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;}function MM_preloadImages() {  var d=document; 	if(d.images){ 	  if(!d.MM_p) 		  d.MM_p=new Array();    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; 		for(i=0; i<a.length; i++)      if (a[i].indexOf("#")!=0){ 			  d.MM_p[j]=new Image; 				d.MM_p[j++].src=a[i];			}	}}function preload(toPreload){  if (toPreload)	     for (var i=0; i<toPreload.length; i++)     {	var thatImage= new Image();	if (thatImage)	   thatImage.src= toPreload[i];     }}function preload2() {  document.preload = new Array();	if (document.images) {	  for (var i=0; i<preloadImages.arguments.length; i++) {		  document.preload[i] = new Image();			document.preload[i].src = preloadImages.arguments[i];		}	}}function MM_findObj(n, d) { //v4.0  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);  if(!x && document.getElementById) x=document.getElementById(n); return x;}function MM_swapImage() { //v3.0  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}}function MM_reloadPage(init) {  //reloads the window if Nav4 resized  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();}MM_reloadPage(true);var supportPrefix =  '<tr><td valign="bottom"><hr noshade color="#3399CC" size="1">\n<font size="1">';var supportBody = 'combinFormation requires <a href="javascript:support()">up-to-date\n hardware and java</a>.';var supportBodyAndSuffix = supportBody + "</font></font><br><br></td>\n</tr>";var supportCell = supportPrefix + supportBodyAndSuffix;//var supportCss = '<p function supportDir(){   var loc = location.href;   var thatDir = ((loc.indexOf("combinformation")  > -1) || 		  (loc.indexOf("combinFormation") > -1) || (loc.indexOf("cf") > -1)) ?		     "combinformation" : "collageMachine"   return rel(rootDir) + thatDir + "/";}function supportHref(optionalSection){   var result = supportDir() + 'support.html';   if (optionalSection)      result += "?section=" + optionalSection;   return result;}function openSupport(optionalSection){   var prev = self.opener;   var dest = supportHref(optionalSection);      if (prev && !prev.closed && (prev != self))   {      prev.location	= "about:blank";      prev.location	= dest;      prev.focus();   }   else   {      supplementalPopup(dest);   }   }function openSupportSameWindow(optionalSection){   self.location.href = supportHref(optionalSection);}function fixSearchString(str){   var words = str.split(/\s+/);   var result= "";   var last  = words.length - 1;      for (var i=0; i < last; i++)      result += escape(words[i]) + "+";   result += escape(words[last]);   return result;}function unfixSearchString(str){   var words = str.split("+");   var result= "";   var last  = words.length - 1;      for (var i=0; i < last; i++)      result += unescape(words[i]) + " ";   result += unescape(words[last]);//   alert(result);   return result;}