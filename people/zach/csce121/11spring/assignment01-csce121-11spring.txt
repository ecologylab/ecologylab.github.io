(Print this page as a cover sheet for your printouts)

LAB 1 Section: CSCE 121-______________ Due: 11:59 P.M. Tuesday,
February 1, 2011

"On my honor, as an Aggie, I have neither given nor received any
unauthorized aid on any portion of the academic work included in this
assignment."


________________________________	________________________________
Typed or printed name of student	Signature of student

NOTE:  Please follow your lab instructor's directions for submitting
your assignment through CSNET.  ONLY ASSIGNMENTS SUBMITTED TO CSNET WILL
BE GRADED!  Make a printout of this cover sheet, sign it and give it to
your TA in lab or put it in your TA's mailbox in the corner of the 3rd
floor of HRBB, near room 312.  IF YOU DO NOT TURN IN A SIGNED COVER
SHEET YOUR WORK WILL NOT BE GRADED!

NOTE:  Homework will be graded on unix.cse.tamu.edu using g++.  You are
free to develop your programs on Visual C++ or any other platform, but
it is your responsibility to make sure your programs also compile and
execute correctly on unix.cs.tamu.edu using g++.

The grade for this lab will be based on style (formatting, variable
names, comments, etc.), syntax (no compilation or link errors), and
correctness (passes all test cases).  Your grade for this lab is:

Problem #       1       2       3       4 
Style                   /4      /4      /2 
Syntax                  /6      /6      /3 
Correctness             /10     /10     /5
-------------------------------------------------------------------
Total           /10     /20     /20     /10

Grand total _____/50


1. (10 points) In this exercise, you will select a pair of related words
from the Terms at the end of the chapter and, in one sentence, describe
how they are connected, demonstrating an understanding of each of the
terms in the sentence.

For Chapters 1, 2, 3, and 4, select a pair of words from each then, from
the words you have not yet used, select another pair (the last pair may
cross chapters). Each sentence is worth 2 points. Put stars (asterisks)
around your terms to make it clear which ones you are using. Name your
assignment hw1pr1.txt. You may not use the pairs from the examples 
below (although pairing the words with other words is acceptable).

For example:

A *compiler* detects and can warn the programmer of *compile-time
errors* in source code.

*Concatenation* of strings is accomplished using the + *operator*.

2. (20 points)  Exercise 4 on page 85, but with the following
modification: instead of ints, use doubles.  Name your program
hw1pr2.cpp.

3. (20 points)  Exercise 10 on page 86, but with the following
modification: instead of writing the operator followed by two operands,
your program should handle two operands followed by the operator.  Name
your program hw1pr3.cpp.

For example: 

100 3.14 + 

4 5 *

Note:  This method of writing equations is known as reverse Polish
notation (RPN) or postfix notation (normally, you write in infix
notation). It is named for the nationality of its inventor, Jan
Lukasiewicz, the inventor of prefix Polish notation. (The original
question asks you to use prefix Polish notation.) It has the advantage
of not needing parenthesis to express order of operations.
[http://en.wikipedia.org/wiki/Reverse_Polish_Notation]

OPTIONAL EXTRA CREDIT =====================

4. (10 points)  Exercise 18 on page 128.  For now you do not need to
worry about complex roots. Name your program hw1pr4.cpp.
